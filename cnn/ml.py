import os 
import numpy as np
from sklearn import svm
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from skimage import io
from skimage.transform import resize

# 加载和准备数据
# 假设你有一个名为 images 的列表，包含所有图像数据
# labels 是对应的标签列表
# 请根据实际情况修改这部分代码
images = []  # 图像数据列表
labels = []  # 标签列表

# 图像文件所在的根目录
root_dir = os.path.join("data", "malimg_dataset")

# 获取所有类别文件夹的名称
class_names = os.listdir(root_dir)

# 遍历每个类别文件夹
for class_name in class_names:
    class_dir = os.path.join(root_dir, class_name)
    # 获取类别文件夹下的所有图像文件
    image_files = os.listdir(class_dir)
    # 遍历图像文件
    for image_file in image_files:
        # 读取图像文件
        image_path = os.path.join(class_dir, image_file)
        image = io.imread(image_path)
        # 将图像数据添加到列表中
        images.append(image)
        # 将标签添加到列表中（这里假设类别名称就是标签）
        labels.append(class_name)

# 将图像数据转换为特征向量
# 这里使用图像的像素值直接展平作为特征向量
features = []
for image in images:
    # 将图像调整为统一大小
    image = resize(image, (512, 512))
    # 将图像的像素值展平成一维数组
    feature = image.flatten()
    features.append(feature)
features = np.array(features)
labels = np.array(labels)

# 划分训练集和测试集
X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.2, random_state=42)

# 初始化 SVM 分类器
clf = svm.SVC(kernel='linear')

# 训练 SVM 模型
clf.fit(X_train, y_train)

# 预测
y_pred = clf.predict(X_test)

# 计算准确率
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
